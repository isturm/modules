/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import de.uhh.l2g.plugins.model.Lectureseries;
import de.uhh.l2g.plugins.model.LectureseriesModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Lectureseries service. Represents a row in the &quot;LG_Lectureseries&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>LectureseriesModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LectureseriesImpl}.
 * </p>
 *
 * @author Iavor Sturm
 * @see LectureseriesImpl
 * @generated
 */
@ProviderType
public class LectureseriesModelImpl
	extends BaseModelImpl<Lectureseries> implements LectureseriesModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a lectureseries model instance should use the <code>Lectureseries</code> interface instead.
	 */
	public static final String TABLE_NAME = "LG_Lectureseries";

	public static final Object[][] TABLE_COLUMNS = {
		{"number_", Types.VARCHAR}, {"eventType", Types.VARCHAR},
		{"categoryId", Types.BIGINT}, {"name", Types.VARCHAR},
		{"shortDesc", Types.VARCHAR}, {"termId", Types.BIGINT},
		{"language", Types.VARCHAR}, {"facultyName", Types.VARCHAR},
		{"lectureseriesId", Types.BIGINT}, {"password_", Types.VARCHAR},
		{"approved", Types.INTEGER}, {"longDesc", Types.VARCHAR},
		{"latestOpenAccessVideoId", Types.BIGINT},
		{"latestVideoUploadDate", Types.TIMESTAMP},
		{"latestVideoGenerationDate", Types.VARCHAR},
		{"videoSort", Types.INTEGER}, {"USID", Types.VARCHAR},
		{"previewVideoId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("number_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("eventType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("categoryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shortDesc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("termId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("language", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("facultyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lectureseriesId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("password_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("approved", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("longDesc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("latestOpenAccessVideoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("latestVideoUploadDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("latestVideoGenerationDate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("videoSort", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("USID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("previewVideoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table LG_Lectureseries (number_ VARCHAR(75) null,eventType VARCHAR(75) null,categoryId LONG,name VARCHAR(75) null,shortDesc VARCHAR(75) null,termId LONG,language VARCHAR(75) null,facultyName VARCHAR(75) null,lectureseriesId LONG not null primary key,password_ VARCHAR(75) null,approved INTEGER,longDesc VARCHAR(75) null,latestOpenAccessVideoId LONG,latestVideoUploadDate DATE null,latestVideoGenerationDate VARCHAR(75) null,videoSort INTEGER,USID VARCHAR(75) null,previewVideoId LONG,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";

	public static final String TABLE_SQL_DROP = "drop table LG_Lectureseries";

	public static final String ORDER_BY_JPQL =
		" ORDER BY lectureseries.name ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY LG_Lectureseries.name ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		de.uhh.l2g.plugins.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.de.uhh.l2g.plugins.model.Lectureseries"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		de.uhh.l2g.plugins.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.de.uhh.l2g.plugins.model.Lectureseries"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		de.uhh.l2g.plugins.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.de.uhh.l2g.plugins.model.Lectureseries"),
		true);

	public static final long USID_COLUMN_BITMASK = 1L;

	public static final long APPROVED_COLUMN_BITMASK = 2L;

	public static final long CATEGORYID_COLUMN_BITMASK = 4L;

	public static final long COMPANYID_COLUMN_BITMASK = 8L;

	public static final long EVENTTYPE_COLUMN_BITMASK = 16L;

	public static final long FACULTYNAME_COLUMN_BITMASK = 32L;

	public static final long GROUPID_COLUMN_BITMASK = 64L;

	public static final long LANGUAGE_COLUMN_BITMASK = 128L;

	public static final long LATESTOPENACCESSVIDEOID_COLUMN_BITMASK = 256L;

	public static final long LATESTVIDEOGENERATIONDATE_COLUMN_BITMASK = 512L;

	public static final long LATESTVIDEOUPLOADDATE_COLUMN_BITMASK = 1024L;

	public static final long NAME_COLUMN_BITMASK = 2048L;

	public static final long NUMBER_COLUMN_BITMASK = 4096L;

	public static final long PASSWORD_COLUMN_BITMASK = 8192L;

	public static final long TERMID_COLUMN_BITMASK = 16384L;

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		de.uhh.l2g.plugins.service.util.ServiceProps.get(
			"lock.expiration.time.de.uhh.l2g.plugins.model.Lectureseries"));

	public LectureseriesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _lectureseriesId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLectureseriesId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _lectureseriesId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Lectureseries.class;
	}

	@Override
	public String getModelClassName() {
		return Lectureseries.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Lectureseries, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Lectureseries, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Lectureseries, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((Lectureseries)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Lectureseries, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Lectureseries, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Lectureseries)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Lectureseries, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Lectureseries, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, Lectureseries>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			Lectureseries.class.getClassLoader(), Lectureseries.class,
			ModelWrapper.class);

		try {
			Constructor<Lectureseries> constructor =
				(Constructor<Lectureseries>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException roe) {
					throw new InternalError(roe);
				}
			};
		}
		catch (NoSuchMethodException nsme) {
			throw new InternalError(nsme);
		}
	}

	private static final Map<String, Function<Lectureseries, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<Lectureseries, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<Lectureseries, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<Lectureseries, Object>>();
		Map<String, BiConsumer<Lectureseries, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<Lectureseries, ?>>();

		attributeGetterFunctions.put(
			"number",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getNumber();
				}

			});
		attributeSetterBiConsumers.put(
			"number",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(Lectureseries lectureseries, Object number) {
					lectureseries.setNumber((String)number);
				}

			});
		attributeGetterFunctions.put(
			"eventType",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getEventType();
				}

			});
		attributeSetterBiConsumers.put(
			"eventType",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object eventType) {

					lectureseries.setEventType((String)eventType);
				}

			});
		attributeGetterFunctions.put(
			"categoryId",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getCategoryId();
				}

			});
		attributeSetterBiConsumers.put(
			"categoryId",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object categoryId) {

					lectureseries.setCategoryId((Long)categoryId);
				}

			});
		attributeGetterFunctions.put(
			"name",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getName();
				}

			});
		attributeSetterBiConsumers.put(
			"name",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(Lectureseries lectureseries, Object name) {
					lectureseries.setName((String)name);
				}

			});
		attributeGetterFunctions.put(
			"shortDesc",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getShortDesc();
				}

			});
		attributeSetterBiConsumers.put(
			"shortDesc",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object shortDesc) {

					lectureseries.setShortDesc((String)shortDesc);
				}

			});
		attributeGetterFunctions.put(
			"termId",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getTermId();
				}

			});
		attributeSetterBiConsumers.put(
			"termId",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(Lectureseries lectureseries, Object termId) {
					lectureseries.setTermId((Long)termId);
				}

			});
		attributeGetterFunctions.put(
			"language",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getLanguage();
				}

			});
		attributeSetterBiConsumers.put(
			"language",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object language) {

					lectureseries.setLanguage((String)language);
				}

			});
		attributeGetterFunctions.put(
			"facultyName",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getFacultyName();
				}

			});
		attributeSetterBiConsumers.put(
			"facultyName",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object facultyName) {

					lectureseries.setFacultyName((String)facultyName);
				}

			});
		attributeGetterFunctions.put(
			"lectureseriesId",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getLectureseriesId();
				}

			});
		attributeSetterBiConsumers.put(
			"lectureseriesId",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object lectureseriesId) {

					lectureseries.setLectureseriesId((Long)lectureseriesId);
				}

			});
		attributeGetterFunctions.put(
			"password",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getPassword();
				}

			});
		attributeSetterBiConsumers.put(
			"password",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object password) {

					lectureseries.setPassword((String)password);
				}

			});
		attributeGetterFunctions.put(
			"approved",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getApproved();
				}

			});
		attributeSetterBiConsumers.put(
			"approved",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object approved) {

					lectureseries.setApproved((Integer)approved);
				}

			});
		attributeGetterFunctions.put(
			"longDesc",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getLongDesc();
				}

			});
		attributeSetterBiConsumers.put(
			"longDesc",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object longDesc) {

					lectureseries.setLongDesc((String)longDesc);
				}

			});
		attributeGetterFunctions.put(
			"latestOpenAccessVideoId",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getLatestOpenAccessVideoId();
				}

			});
		attributeSetterBiConsumers.put(
			"latestOpenAccessVideoId",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries,
					Object latestOpenAccessVideoId) {

					lectureseries.setLatestOpenAccessVideoId(
						(Long)latestOpenAccessVideoId);
				}

			});
		attributeGetterFunctions.put(
			"latestVideoUploadDate",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getLatestVideoUploadDate();
				}

			});
		attributeSetterBiConsumers.put(
			"latestVideoUploadDate",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object latestVideoUploadDate) {

					lectureseries.setLatestVideoUploadDate(
						(Date)latestVideoUploadDate);
				}

			});
		attributeGetterFunctions.put(
			"latestVideoGenerationDate",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getLatestVideoGenerationDate();
				}

			});
		attributeSetterBiConsumers.put(
			"latestVideoGenerationDate",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries,
					Object latestVideoGenerationDate) {

					lectureseries.setLatestVideoGenerationDate(
						(String)latestVideoGenerationDate);
				}

			});
		attributeGetterFunctions.put(
			"videoSort",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getVideoSort();
				}

			});
		attributeSetterBiConsumers.put(
			"videoSort",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object videoSort) {

					lectureseries.setVideoSort((Integer)videoSort);
				}

			});
		attributeGetterFunctions.put(
			"USID",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getUSID();
				}

			});
		attributeSetterBiConsumers.put(
			"USID",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(Lectureseries lectureseries, Object USID) {
					lectureseries.setUSID((String)USID);
				}

			});
		attributeGetterFunctions.put(
			"previewVideoId",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getPreviewVideoId();
				}

			});
		attributeSetterBiConsumers.put(
			"previewVideoId",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object previewVideoId) {

					lectureseries.setPreviewVideoId((Long)previewVideoId);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object groupId) {

					lectureseries.setGroupId((Long)groupId);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object companyId) {

					lectureseries.setCompanyId((Long)companyId);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(Lectureseries lectureseries, Object userId) {
					lectureseries.setUserId((Long)userId);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object userName) {

					lectureseries.setUserName((String)userName);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object createDate) {

					lectureseries.setCreateDate((Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<Lectureseries, Object>() {

				@Override
				public Object apply(Lectureseries lectureseries) {
					return lectureseries.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<Lectureseries, Object>() {

				@Override
				public void accept(
					Lectureseries lectureseries, Object modifiedDate) {

					lectureseries.setModifiedDate((Date)modifiedDate);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public String getNumber() {
		if (_number == null) {
			return "";
		}
		else {
			return _number;
		}
	}

	@Override
	public void setNumber(String number) {
		_columnBitmask |= NUMBER_COLUMN_BITMASK;

		if (_originalNumber == null) {
			_originalNumber = _number;
		}

		_number = number;
	}

	public String getOriginalNumber() {
		return GetterUtil.getString(_originalNumber);
	}

	@Override
	public String getEventType() {
		if (_eventType == null) {
			return "";
		}
		else {
			return _eventType;
		}
	}

	@Override
	public void setEventType(String eventType) {
		_columnBitmask |= EVENTTYPE_COLUMN_BITMASK;

		if (_originalEventType == null) {
			_originalEventType = _eventType;
		}

		_eventType = eventType;
	}

	public String getOriginalEventType() {
		return GetterUtil.getString(_originalEventType);
	}

	@Override
	public long getCategoryId() {
		return _categoryId;
	}

	@Override
	public void setCategoryId(long categoryId) {
		_columnBitmask |= CATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalCategoryId) {
			_setOriginalCategoryId = true;

			_originalCategoryId = _categoryId;
		}

		_categoryId = categoryId;
	}

	public long getOriginalCategoryId() {
		return _originalCategoryId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask = -1L;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@Override
	public String getShortDesc() {
		if (_shortDesc == null) {
			return "";
		}
		else {
			return _shortDesc;
		}
	}

	@Override
	public void setShortDesc(String shortDesc) {
		_shortDesc = shortDesc;
	}

	@Override
	public long getTermId() {
		return _termId;
	}

	@Override
	public void setTermId(long termId) {
		_columnBitmask |= TERMID_COLUMN_BITMASK;

		if (!_setOriginalTermId) {
			_setOriginalTermId = true;

			_originalTermId = _termId;
		}

		_termId = termId;
	}

	public long getOriginalTermId() {
		return _originalTermId;
	}

	@Override
	public String getLanguage() {
		if (_language == null) {
			return "";
		}
		else {
			return _language;
		}
	}

	@Override
	public void setLanguage(String language) {
		_columnBitmask |= LANGUAGE_COLUMN_BITMASK;

		if (_originalLanguage == null) {
			_originalLanguage = _language;
		}

		_language = language;
	}

	public String getOriginalLanguage() {
		return GetterUtil.getString(_originalLanguage);
	}

	@Override
	public String getFacultyName() {
		if (_facultyName == null) {
			return "";
		}
		else {
			return _facultyName;
		}
	}

	@Override
	public void setFacultyName(String facultyName) {
		_columnBitmask |= FACULTYNAME_COLUMN_BITMASK;

		if (_originalFacultyName == null) {
			_originalFacultyName = _facultyName;
		}

		_facultyName = facultyName;
	}

	public String getOriginalFacultyName() {
		return GetterUtil.getString(_originalFacultyName);
	}

	@Override
	public long getLectureseriesId() {
		return _lectureseriesId;
	}

	@Override
	public void setLectureseriesId(long lectureseriesId) {
		_lectureseriesId = lectureseriesId;
	}

	@Override
	public String getPassword() {
		if (_password == null) {
			return "";
		}
		else {
			return _password;
		}
	}

	@Override
	public void setPassword(String password) {
		_columnBitmask |= PASSWORD_COLUMN_BITMASK;

		if (_originalPassword == null) {
			_originalPassword = _password;
		}

		_password = password;
	}

	public String getOriginalPassword() {
		return GetterUtil.getString(_originalPassword);
	}

	@Override
	public int getApproved() {
		return _approved;
	}

	@Override
	public void setApproved(int approved) {
		_columnBitmask |= APPROVED_COLUMN_BITMASK;

		if (!_setOriginalApproved) {
			_setOriginalApproved = true;

			_originalApproved = _approved;
		}

		_approved = approved;
	}

	public int getOriginalApproved() {
		return _originalApproved;
	}

	@Override
	public String getLongDesc() {
		if (_longDesc == null) {
			return "";
		}
		else {
			return _longDesc;
		}
	}

	@Override
	public void setLongDesc(String longDesc) {
		_longDesc = longDesc;
	}

	@Override
	public long getLatestOpenAccessVideoId() {
		return _latestOpenAccessVideoId;
	}

	@Override
	public void setLatestOpenAccessVideoId(long latestOpenAccessVideoId) {
		_columnBitmask |= LATESTOPENACCESSVIDEOID_COLUMN_BITMASK;

		if (!_setOriginalLatestOpenAccessVideoId) {
			_setOriginalLatestOpenAccessVideoId = true;

			_originalLatestOpenAccessVideoId = _latestOpenAccessVideoId;
		}

		_latestOpenAccessVideoId = latestOpenAccessVideoId;
	}

	public long getOriginalLatestOpenAccessVideoId() {
		return _originalLatestOpenAccessVideoId;
	}

	@Override
	public Date getLatestVideoUploadDate() {
		return _latestVideoUploadDate;
	}

	@Override
	public void setLatestVideoUploadDate(Date latestVideoUploadDate) {
		_columnBitmask |= LATESTVIDEOUPLOADDATE_COLUMN_BITMASK;

		if (_originalLatestVideoUploadDate == null) {
			_originalLatestVideoUploadDate = _latestVideoUploadDate;
		}

		_latestVideoUploadDate = latestVideoUploadDate;
	}

	public Date getOriginalLatestVideoUploadDate() {
		return _originalLatestVideoUploadDate;
	}

	@Override
	public String getLatestVideoGenerationDate() {
		if (_latestVideoGenerationDate == null) {
			return "";
		}
		else {
			return _latestVideoGenerationDate;
		}
	}

	@Override
	public void setLatestVideoGenerationDate(String latestVideoGenerationDate) {
		_columnBitmask |= LATESTVIDEOGENERATIONDATE_COLUMN_BITMASK;

		if (_originalLatestVideoGenerationDate == null) {
			_originalLatestVideoGenerationDate = _latestVideoGenerationDate;
		}

		_latestVideoGenerationDate = latestVideoGenerationDate;
	}

	public String getOriginalLatestVideoGenerationDate() {
		return GetterUtil.getString(_originalLatestVideoGenerationDate);
	}

	@Override
	public int getVideoSort() {
		return _videoSort;
	}

	@Override
	public void setVideoSort(int videoSort) {
		_videoSort = videoSort;
	}

	@Override
	public String getUSID() {
		if (_USID == null) {
			return "";
		}
		else {
			return _USID;
		}
	}

	@Override
	public void setUSID(String USID) {
		_columnBitmask |= USID_COLUMN_BITMASK;

		if (_originalUSID == null) {
			_originalUSID = _USID;
		}

		_USID = USID;
	}

	public String getOriginalUSID() {
		return GetterUtil.getString(_originalUSID);
	}

	@Override
	public long getPreviewVideoId() {
		return _previewVideoId;
	}

	@Override
	public void setPreviewVideoId(long previewVideoId) {
		_previewVideoId = previewVideoId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), Lectureseries.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Lectureseries toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = _escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LectureseriesImpl lectureseriesImpl = new LectureseriesImpl();

		lectureseriesImpl.setNumber(getNumber());
		lectureseriesImpl.setEventType(getEventType());
		lectureseriesImpl.setCategoryId(getCategoryId());
		lectureseriesImpl.setName(getName());
		lectureseriesImpl.setShortDesc(getShortDesc());
		lectureseriesImpl.setTermId(getTermId());
		lectureseriesImpl.setLanguage(getLanguage());
		lectureseriesImpl.setFacultyName(getFacultyName());
		lectureseriesImpl.setLectureseriesId(getLectureseriesId());
		lectureseriesImpl.setPassword(getPassword());
		lectureseriesImpl.setApproved(getApproved());
		lectureseriesImpl.setLongDesc(getLongDesc());
		lectureseriesImpl.setLatestOpenAccessVideoId(
			getLatestOpenAccessVideoId());
		lectureseriesImpl.setLatestVideoUploadDate(getLatestVideoUploadDate());
		lectureseriesImpl.setLatestVideoGenerationDate(
			getLatestVideoGenerationDate());
		lectureseriesImpl.setVideoSort(getVideoSort());
		lectureseriesImpl.setUSID(getUSID());
		lectureseriesImpl.setPreviewVideoId(getPreviewVideoId());
		lectureseriesImpl.setGroupId(getGroupId());
		lectureseriesImpl.setCompanyId(getCompanyId());
		lectureseriesImpl.setUserId(getUserId());
		lectureseriesImpl.setUserName(getUserName());
		lectureseriesImpl.setCreateDate(getCreateDate());
		lectureseriesImpl.setModifiedDate(getModifiedDate());

		lectureseriesImpl.resetOriginalValues();

		return lectureseriesImpl;
	}

	@Override
	public int compareTo(Lectureseries lectureseries) {
		int value = 0;

		value = getName().compareTo(lectureseries.getName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Lectureseries)) {
			return false;
		}

		Lectureseries lectureseries = (Lectureseries)obj;

		long primaryKey = lectureseries.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		LectureseriesModelImpl lectureseriesModelImpl = this;

		lectureseriesModelImpl._originalNumber = lectureseriesModelImpl._number;

		lectureseriesModelImpl._originalEventType =
			lectureseriesModelImpl._eventType;

		lectureseriesModelImpl._originalCategoryId =
			lectureseriesModelImpl._categoryId;

		lectureseriesModelImpl._setOriginalCategoryId = false;

		lectureseriesModelImpl._originalName = lectureseriesModelImpl._name;

		lectureseriesModelImpl._originalTermId = lectureseriesModelImpl._termId;

		lectureseriesModelImpl._setOriginalTermId = false;

		lectureseriesModelImpl._originalLanguage =
			lectureseriesModelImpl._language;

		lectureseriesModelImpl._originalFacultyName =
			lectureseriesModelImpl._facultyName;

		lectureseriesModelImpl._originalPassword =
			lectureseriesModelImpl._password;

		lectureseriesModelImpl._originalApproved =
			lectureseriesModelImpl._approved;

		lectureseriesModelImpl._setOriginalApproved = false;

		lectureseriesModelImpl._originalLatestOpenAccessVideoId =
			lectureseriesModelImpl._latestOpenAccessVideoId;

		lectureseriesModelImpl._setOriginalLatestOpenAccessVideoId = false;

		lectureseriesModelImpl._originalLatestVideoUploadDate =
			lectureseriesModelImpl._latestVideoUploadDate;

		lectureseriesModelImpl._originalLatestVideoGenerationDate =
			lectureseriesModelImpl._latestVideoGenerationDate;

		lectureseriesModelImpl._originalUSID = lectureseriesModelImpl._USID;

		lectureseriesModelImpl._originalGroupId =
			lectureseriesModelImpl._groupId;

		lectureseriesModelImpl._setOriginalGroupId = false;

		lectureseriesModelImpl._originalCompanyId =
			lectureseriesModelImpl._companyId;

		lectureseriesModelImpl._setOriginalCompanyId = false;

		lectureseriesModelImpl._setModifiedDate = false;

		lectureseriesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Lectureseries> toCacheModel() {
		LectureseriesCacheModel lectureseriesCacheModel =
			new LectureseriesCacheModel();

		lectureseriesCacheModel.number = getNumber();

		String number = lectureseriesCacheModel.number;

		if ((number != null) && (number.length() == 0)) {
			lectureseriesCacheModel.number = null;
		}

		lectureseriesCacheModel.eventType = getEventType();

		String eventType = lectureseriesCacheModel.eventType;

		if ((eventType != null) && (eventType.length() == 0)) {
			lectureseriesCacheModel.eventType = null;
		}

		lectureseriesCacheModel.categoryId = getCategoryId();

		lectureseriesCacheModel.name = getName();

		String name = lectureseriesCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			lectureseriesCacheModel.name = null;
		}

		lectureseriesCacheModel.shortDesc = getShortDesc();

		String shortDesc = lectureseriesCacheModel.shortDesc;

		if ((shortDesc != null) && (shortDesc.length() == 0)) {
			lectureseriesCacheModel.shortDesc = null;
		}

		lectureseriesCacheModel.termId = getTermId();

		lectureseriesCacheModel.language = getLanguage();

		String language = lectureseriesCacheModel.language;

		if ((language != null) && (language.length() == 0)) {
			lectureseriesCacheModel.language = null;
		}

		lectureseriesCacheModel.facultyName = getFacultyName();

		String facultyName = lectureseriesCacheModel.facultyName;

		if ((facultyName != null) && (facultyName.length() == 0)) {
			lectureseriesCacheModel.facultyName = null;
		}

		lectureseriesCacheModel.lectureseriesId = getLectureseriesId();

		lectureseriesCacheModel.password = getPassword();

		String password = lectureseriesCacheModel.password;

		if ((password != null) && (password.length() == 0)) {
			lectureseriesCacheModel.password = null;
		}

		lectureseriesCacheModel.approved = getApproved();

		lectureseriesCacheModel.longDesc = getLongDesc();

		String longDesc = lectureseriesCacheModel.longDesc;

		if ((longDesc != null) && (longDesc.length() == 0)) {
			lectureseriesCacheModel.longDesc = null;
		}

		lectureseriesCacheModel.latestOpenAccessVideoId =
			getLatestOpenAccessVideoId();

		Date latestVideoUploadDate = getLatestVideoUploadDate();

		if (latestVideoUploadDate != null) {
			lectureseriesCacheModel.latestVideoUploadDate =
				latestVideoUploadDate.getTime();
		}
		else {
			lectureseriesCacheModel.latestVideoUploadDate = Long.MIN_VALUE;
		}

		lectureseriesCacheModel.latestVideoGenerationDate =
			getLatestVideoGenerationDate();

		String latestVideoGenerationDate =
			lectureseriesCacheModel.latestVideoGenerationDate;

		if ((latestVideoGenerationDate != null) &&
			(latestVideoGenerationDate.length() == 0)) {

			lectureseriesCacheModel.latestVideoGenerationDate = null;
		}

		lectureseriesCacheModel.videoSort = getVideoSort();

		lectureseriesCacheModel.USID = getUSID();

		String USID = lectureseriesCacheModel.USID;

		if ((USID != null) && (USID.length() == 0)) {
			lectureseriesCacheModel.USID = null;
		}

		lectureseriesCacheModel.previewVideoId = getPreviewVideoId();

		lectureseriesCacheModel.groupId = getGroupId();

		lectureseriesCacheModel.companyId = getCompanyId();

		lectureseriesCacheModel.userId = getUserId();

		lectureseriesCacheModel.userName = getUserName();

		String userName = lectureseriesCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			lectureseriesCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			lectureseriesCacheModel.createDate = createDate.getTime();
		}
		else {
			lectureseriesCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			lectureseriesCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			lectureseriesCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return lectureseriesCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Lectureseries, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Lectureseries, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Lectureseries, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((Lectureseries)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<Lectureseries, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<Lectureseries, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Lectureseries, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((Lectureseries)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final Function<InvocationHandler, Lectureseries>
		_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	private String _number;
	private String _originalNumber;
	private String _eventType;
	private String _originalEventType;
	private long _categoryId;
	private long _originalCategoryId;
	private boolean _setOriginalCategoryId;
	private String _name;
	private String _originalName;
	private String _shortDesc;
	private long _termId;
	private long _originalTermId;
	private boolean _setOriginalTermId;
	private String _language;
	private String _originalLanguage;
	private String _facultyName;
	private String _originalFacultyName;
	private long _lectureseriesId;
	private String _password;
	private String _originalPassword;
	private int _approved;
	private int _originalApproved;
	private boolean _setOriginalApproved;
	private String _longDesc;
	private long _latestOpenAccessVideoId;
	private long _originalLatestOpenAccessVideoId;
	private boolean _setOriginalLatestOpenAccessVideoId;
	private Date _latestVideoUploadDate;
	private Date _originalLatestVideoUploadDate;
	private String _latestVideoGenerationDate;
	private String _originalLatestVideoGenerationDate;
	private int _videoSort;

	private String _USID;

	private String _originalUSID;
	private long _previewVideoId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _columnBitmask;
	private Lectureseries _escapedModel;

}